"use client";
import { useState } from "react";
import styles from "../styles/App.module.css";
function AddUser({ onAdd }) {
  const [userName, setUserName] = useState("");
  const [email, setEmail] = useState("");
  const [city, setCity] = useState("");

  const handleSubmit = (e) => {
    e.preventDefault();
    if (!userName.trim() || !email.trim() || city.trim())
      return alert("All fields are Mandatory");

    onAdd({
      userName: userName.trim(),
      email: email.trim(),
      city: city.trim(),
    });
  };
  return (
    <form onSubmit={handleSubmit} className={styles.form}>
      <h3>Add User</h3>
      <input
        placeholder="Enter UserName"
        value={userName}
        onChange={(e) => setUserName(e.target.value)}
        className={styles.input}
      />
      &nbsp;
      <input
        placeholder="Enter Email"
        value={email}
        onChange={(e) => setEmail(e.target.value)}
        className={styles.input}
      />
      &nbsp;
      <input
        placeholder="Enter City"
        value={city}
        onChange={(e) => setCity(e.target.value)}
        className={styles.input}
      />
      &nbsp;
      <div>
        <button className="{styles.button}">Add User</button>
      </div>
    </form>
  );
}
export default AddUser;




----


"use client";
import { Component } from "react";
import Header from "./Header";
import Footer from "./Footer";
import AddUser from "./AddUser";
import styles from "../styles/App.module.css";
import { useUsers } from "../hooks/useUsers";

function MainApp() {
  const { users, addUser } = useUsers();

  const handleSaveEdit = (id, patch) => {};
  const headerMessage = " NextJS User CRUD App";
  const footerMessage = "User CopyRight Message";
  return (
    <main className={styles.container}>
      <Header hm={headerMessage}/>

      <div className={styles.grid}>
        <div className={styles.card}>
            <AddUser />
        </div>

      </div>

      <Footer fn={footerMessage}/>
    </main>
  );
}

export default MainApp;


----
'use client'

import { useEffect, useState } from "react"
import { writeToStorage } from "../lib/storage"


export function useUsers(){
    const [users,setUsers]= useState([])

    useEffect(()=>{
        writeToStorage(users)
    },[users])

    const addUser=(user)=>{
        setUsers(prev => [...prev,{...user,id: Date.now().toString()}])
    }
    return {users,addUser}
}

--------


/* layout */
.container {
  max-width: 900px;
  margin: 24px auto;
  padding: 12px;
  font-family: system-ui, -apple-system, "Segoe UI", Roboto, "Helvetica Neue", Arial;
}

.title {
  text-align: center;
}

/* grid & cards */
.grid {
  display: grid;
  grid-template-columns: 1fr 1fr;
  gap: 16px;
  align-items: start;
}

.card {
  padding: 12px;
  border: 1px solid #eee;
  border-radius: 8px;
  box-shadow: 0 1px 4px rgba(0,0,0,0.03);
}

.footer {
  margin-top: 20px;
  text-align: center;
  color: #666;
}

/* form */
.form {
  display: flex;
  flex-direction: column;
  gap: 8px;
}

.input {
  padding: 8px;
  border-radius: 4px;
  border: 1px solid #ddd;
}

.controls {
  display: flex;
  gap: 8px;
}

.button {
  padding: 8px 12px;
  border-radius: 6px;
  border: none;
  cursor: pointer;
}

.secondary {
  padding: 8px 12px;
  border-radius: 6px;
  border: 1px solid #ccc;
  cursor: pointer;
}

/* inline edit */
.formInline {
  display: flex;
  gap: 8px;
  align-items: center;
}

.smallInput {
  padding: 6px;
  border-radius: 4px;
  border: 1px solid #ddd;
}

.buttonSmall {
  padding: 6px 10px;
  border-radius: 6px;
  cursor: pointer;
}

.secondarySmall {
  padding: 6px 10px;
  border-radius: 6px;
  border: 1px solid #ccc;
  cursor: pointer;
}

/* list & items */
.list {
  display: flex;
  flex-direction: column;
  gap: 8px;
}

.item {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 8px;
  border-radius: 6px;
  border: 1px solid #f0f0f0;
}

.itemControls {
  display: flex;
  gap: 8px;
}

.small {
  padding: 6px 8px;
  border-radius: 6px;
  cursor: pointer;
}

.dangerSmall {
  padding: 6px 8px;
  border-radius: 6px;
  cursor: pointer;
  border: 1px solid #e74c3c;
  color: #e74c3c;
  background: transparent;
}

.danger {
  padding: 8px 10px;
  border-radius: 6px;
  cursor: pointer;
  border: 1px solid #e74c3c;
  color: #e74c3c;
  background: transparent;
}

.empty {
  color: #777;
}
